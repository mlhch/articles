<h1>OS - Gentool Linux</h1>

<p>2014-02-23 14:36 Sunday</p>

<p><a href="http://www.gentoo.org/" target="_blank">http://www.gentoo.org/</a></p>

<ul>
	<li>2014-02-28 07:40 Friday 孩子降生了，Gentoo 弄成了</li>
</ul>

<p>We produce Gentoo Linux, a special flavor of Linux that can be automatically optimized and customized for just about any application or need. Extreme performance, configurability and a top-notch user and developer community are all hallmarks of the Gentoo experience. To learn more, read our&nbsp;<a href="http://www.gentoo.org/main/en/about.xml">about page</a>.</p>

<h2>百度</h2>

<p>Gentoo是一个基于Linux的自由操作系统，它能为几乎任何应用程序或需求自动地作出优化和定制。追求极限的配置、性能，以及顶尖的用户和开发者社区，都是Gentoo体验的标志特点。 Gentoo的哲学是自由和选择。得益于一种称为Portage的技术，Gentoo能成为理想的安全服务器、开发工作站、专业桌面、游戏系统、嵌入式解决方案或者别的东西&mdash;&mdash;你想让它成为什么，它就可以成为什么。由于它近乎无限的适应性，可把Gentoo称作元发行版。</p>

<h2>Gentoo Handbook</h2>

<p><a href="http://www.gentoo.org/doc/en/handbook/" target="_blank">http://www.gentoo.org/doc/en/handbook/</a></p>

<h3>Architectures</h3>

<p>Gentoo Linux is available for many architectures. But what exactly is an architecture?</p>

<p>An&nbsp;architecture&nbsp;is a family of CPUs (processors) who support the same instructions. The two most prominent architectures in the desktop world are the&nbsp;x86&nbsp;architecture and thex86_64&nbsp;architecture (for which Gentoo uses the&nbsp;amd64&nbsp;notation). But many other architectures exist, such as&nbsp;sparc,&nbsp;ppc&nbsp;(the PowerPC family),&nbsp;mips,&nbsp;arm, ...</p>

<p>A distribution as versatile as Gentoo supports many architectures. For that reason, you&#39;ll find that our Gentoo Handbooks are offered for many of the supported architectures. However, that might lead to some confusion as not all users are aware of the differences. Some are only aware of the CPU type or name that their system is a part of (like i686 or Intel Core i7). Below you will find a quick summary of the supported architectures and the abbreviation used in Gentoo. However, most people that do not know the architecture of their system are mostly interested in&nbsp;x86&nbsp;or&nbsp;amd64.</p>

<blockquote>
<p>Note:&nbsp;The table below gives a high-level overview of the supported architectures. The example set of CPUs or systems is nothing more than an example. If you are still not certain which architecture to pick, please read the first section of the Gentoo Handbook&#39;s second chapter (Choosing the Right Installation Medium) as this will elaborate on the supported platforms.</p>
</blockquote>

<table border="1">
	<tbody>
		<tr>
			<td>Architecture</td>
			<td>Description</td>
			<td>Sample set of CPUs or systems</td>
		</tr>
		<tr>
			<td>x86</td>
			<td>A 32-bit architecture used by CPUs that are often said to be &quot;Intel compatible&quot;. It was, until recently, the most popular architecture for desktop PCs. Gentoo offers builds for i486 (supports all families) and i686 (supports Pentium and higher or compatible).</td>
			<td>i486, i686, Intel Core, AMD Athlon, Intel Atom</td>
		</tr>
		<tr>
			<td>x86_64<br />
			(amd64)</td>
			<td>A 64-bit architecture that is compatible with the x86 architecture. It was first used by AMD (under the AMD64 name) and Intel (under the EM64T name) and is now the most prominent architecture for medium and high-end desktop PCs. It is also commonly found in the server segment.</td>
			<td>AMD Athlon 64, AMD Opteron, AMD Sempron processors, AMD Phenom, Intel Pentium 4, Pentium Core i3, i5, i7</td>
		</tr>
		<tr>
			<td>ia64</td>
			<td>A 64-bit architecture designed by Intel and used in their Intel Itanium processor series. This architecture is&nbsp;notcompatible with x86 or x86_64 (aka amd64) and is mostly found in medium and high-end server series.</td>
			<td>Intel Itanium</td>
		</tr>
		<tr>
			<td>sparc</td>
			<td>The SPARC architecture is best known by its most common producers, Sun (now Oracle) and Fujitsu. It is used in server systems although a few workstations exist as well. In Gentoo, only SPARC64 compatible CPUs are supported.</td>
			<td>E3000, Blade 1000, Ultra 2</td>
		</tr>
		<tr>
			<td>ppc</td>
			<td>A 32-bit architecture used by many Apple, IBM and Motorola processors. They are most commonly found in embedded systems.</td>
			<td>Apple OldWorld, Apple NewWorld, generi Pegasos, Efika, older IBM iSeries and pSeries</td>
		</tr>
		<tr>
			<td>ppc64</td>
			<td>The 64-bit variant of the PPC architecture, popular in both embedded as well as high-end performance servers.</td>
			<td>IBM RS/6000s, IBM pSeries, IBM iSeries</td>
		</tr>
		<tr>
			<td>alpha</td>
			<td>The Alpha architecture is a 64-bit architecture developed by Digital Equipment Corporation (DEC). It is still in use by some mid-range and high-end servers, but the architecture is slowly being faded out.</td>
			<td>ES40, AlphaPC, UP1000, Noname</td>
		</tr>
		<tr>
			<td>PA-RISC<br />
			(hppa)</td>
			<td>Referred to as HPPA, the PA-RISC architecture is an instruction set developed by Hewlett-Packard and was used in their mid- and high-end server series until about 2008 (after which HP started using Intel Itanium)</td>
			<td>HP 9000, PA-8600</td>
		</tr>
		<tr>
			<td>mips</td>
			<td>Developed by MIPS Technologies, the MIPS architecture entails multiple subfamilies (called revisions) such as MIPS I, MIPS III, MIPS32, MIPS64 and more. MIPS is most common in embedded systems.</td>
			<td>MIPS32 1074K, R16000</td>
		</tr>
		<tr>
			<td>arm</td>
			<td>This 32-bit architecture is a very popular architecture for embedded and small systems. Subarchitectures range from ARMv1 to ARMv7 (Cortex) and are often found in smartphones, tablets, handheld consoles, end-user GPS navigation systems, etc.</td>
			<td>StrongARM, Cortex-M</td>
		</tr>
	</tbody>
</table>

<p>2.&nbsp;&nbsp;View the Handbook</p>

<p>Assuming that you know (or at least have an idea) which architecture your system is using, you can now select your choice of handbook.</p>

<table border="1">
	<tbody>
		<tr>
			<td>Format</td>
			<td>Description</td>
			<td>Links</td>
		</tr>
		<tr>
			<td>HTML</td>
			<td>Latest version, one page per chapter, perfect for online viewing</td>
			<td><a href="http://www.gentoo.org/doc/en/handbook/handbook-x86.xml">x86</a>,&nbsp;<a href="http://www.gentoo.org/doc/en/handbook/handbook-sparc.xml">sparc</a>,&nbsp;<a href="http://www.gentoo.org/doc/en/handbook/handbook-amd64.xml">amd64</a>,&nbsp;<a href="http://www.gentoo.org/doc/en/handbook/handbook-ppc.xml">ppc</a>,&nbsp;<a href="http://www.gentoo.org/doc/en/handbook/handbook-ppc64.xml">ppc64</a>,&nbsp;<a href="http://www.gentoo.org/doc/en/handbook/handbook-alpha.xml">alpha</a>,&nbsp;<a href="http://www.gentoo.org/doc/en/handbook/handbook-hppa.xml">hppa</a>,&nbsp;<a href="http://www.gentoo.org/doc/en/handbook/handbook-mips.xml">mips</a>,&nbsp;<a href="http://www.gentoo.org/doc/en/handbook/handbook-ia64.xml">ia64</a>,&nbsp;<a href="http://www.gentoo.org/doc/en/handbook/handbook-arm.xml">arm</a></td>
		</tr>
		<tr>
			<td>HTML</td>
			<td>Latest version, all in one page</td>
			<td><a href="http://www.gentoo.org/doc/en/handbook/handbook-x86.xml?full=1">x86</a>,&nbsp;<a href="http://www.gentoo.org/doc/en/handbook/handbook-sparc.xml?full=1">sparc</a>,&nbsp;<a href="http://www.gentoo.org/doc/en/handbook/handbook-amd64.xml?full=1">amd64</a>,&nbsp;<a href="http://www.gentoo.org/doc/en/handbook/handbook-ppc.xml?full=1">ppc</a>,&nbsp;<a href="http://www.gentoo.org/doc/en/handbook/handbook-ppc64.xml?full=1">ppc64</a>,&nbsp;<a href="http://www.gentoo.org/doc/en/handbook/handbook-alpha.xml?full=1">alpha</a>,&nbsp;<a href="http://www.gentoo.org/doc/en/handbook/handbook-hppa.xml?full=1">hppa</a>,&nbsp;<a href="http://www.gentoo.org/doc/en/handbook/handbook-mips.xml?full=1">mips</a>,&nbsp;<a href="http://www.gentoo.org/doc/en/handbook/handbook-ia64.xml?full=1">ia64</a>,&nbsp;<a href="http://www.gentoo.org/doc/en/handbook/handbook-arm.xml?full=1">arm</a></td>
		</tr>
		<tr>
			<td>HTML</td>
			<td>Latest version, all in one page, printable version</td>
			<td><a href="http://www.gentoo.org/doc/en/handbook/handbook-x86.xml?style=printable&amp;full=1">x86</a>,&nbsp;<a href="http://www.gentoo.org/doc/en/handbook/handbook-sparc.xml?style=printable&amp;full=1">sparc</a>,&nbsp;<a href="http://www.gentoo.org/doc/en/handbook/handbook-amd64.xml?style=printable&amp;full=1">amd64</a>,&nbsp;<a href="http://www.gentoo.org/doc/en/handbook/handbook-ppc.xml?style=printable&amp;full=1">ppc</a>,&nbsp;<a href="http://www.gentoo.org/doc/en/handbook/handbook-ppc64.xml?style=printable&amp;full=1">ppc64</a>,&nbsp;<a href="http://www.gentoo.org/doc/en/handbook/handbook-alpha.xml?style=printable&amp;full=1">alpha</a>,&nbsp;<a href="http://www.gentoo.org/doc/en/handbook/handbook-hppa.xml?style=printable&amp;full=1">hppa</a>,&nbsp;<a href="http://www.gentoo.org/doc/en/handbook/handbook-mips.xml?style=printable&amp;full=1">mips</a>,&nbsp;<a href="http://www.gentoo.org/doc/en/handbook/handbook-ia64.xml?style=printable&amp;full=1">ia64</a>,&nbsp;<a href="http://www.gentoo.org/doc/en/handbook/handbook-arm.xml?style=printable&amp;full=1">arm</a><br />
			&nbsp;</td>
		</tr>
	</tbody>
</table>

<h2>Downloads</h2>

<p><a href="http://www.gentoo.org/main/en/where.xml" target="_blank">http://www.gentoo.org/main/en/where.xml</a></p>

<h3>Installation media</h3>

<p>Gentoo Linux is available free over the Internet. You can download Gentoo Linux (weekly autobuilds) from the appropriate iso and architecture link below.</p>

<p>Please consult our&nbsp;<a href="http://www.gentoo.org/doc/en/handbook/">Gentoo Handbooks</a>&nbsp;for more information on what to download, how to install Gentoo, and how to verify the validity of our media.</p>

<ul>
	<li>alpha:&nbsp;<a href="http://distfiles.gentoo.org/releases/alpha/autobuilds/current-iso/">iso</a>&nbsp;<a href="http://distfiles.gentoo.org/releases/alpha/autobuilds/current-stage3/">stages</a></li>
	<li><span class="marker">amd64:&nbsp;<a href="http://distfiles.gentoo.org/releases/amd64/autobuilds/current-iso/">iso</a></span>&nbsp;<a href="http://distfiles.gentoo.org/releases/amd64/autobuilds/current-stage3/">stages</a></li>
	<li>arm:&nbsp;<a href="http://distfiles.gentoo.org/releases/arm/autobuilds/">stages</a></li>
	<li>hppa:&nbsp;<a href="http://distfiles.gentoo.org/releases/hppa/autobuilds/">stages</a></li>
	<li>ia64:&nbsp;<a href="http://distfiles.gentoo.org/releases/ia64/autobuilds/current-iso/">iso</a>&nbsp;<a href="http://distfiles.gentoo.org/releases/ia64/autobuilds/current-stage3/">stages</a></li>
	<li>mips:&nbsp;<a href="http://distfiles.gentoo.org/experimental/mips/stages/">stages</a></li>
	<li>ppc/ppc64:&nbsp;<a href="http://distfiles.gentoo.org/releases/ppc/autobuilds/current-iso/">iso</a>&nbsp;<a href="http://distfiles.gentoo.org/releases/ppc/autobuilds/">stages</a></li>
	<li>s390/s390x:&nbsp;<a href="http://distfiles.gentoo.org/releases/s390/autobuilds/">stages</a></li>
	<li>sh: <a href="http://distfiles.gentoo.org/releases/sh/autobuilds/">stages</a></li>
	<li>sparc:&nbsp;<a href="http://distfiles.gentoo.org/releases/sparc/autobuilds/current-iso/">iso</a>&nbsp;<a href="http://distfiles.gentoo.org/releases/sparc/autobuilds/current-stage3/">stages</a></li>
	<li>x86:&nbsp;<a href="http://distfiles.gentoo.org/releases/x86/autobuilds/current-iso/">iso</a>&nbsp;<a href="http://distfiles.gentoo.org/releases/x86/autobuilds/current-stage3/">stages</a></li>
</ul>

<p>If you prefer to select a local mirror yourself, see&nbsp;<a href="http://www.gentoo.org/main/en/mirrors.xml">Gentoo Mirrors</a>.</p>

<table border="1">
	<tbody>
		<tr>
			<td><a href="http://distfiles.gentoo.org/releases/amd64/autobuilds/current-iso/install-amd64-minimal-20140220.iso">install-amd64-minimal-20140220.iso</a></td>
			<td>21-Feb-2014 23:27</td>
			<td>254M</td>
		</tr>
	</tbody>
</table>

<h2>安装步骤及理解</h2>

<p>http://club.topsage.com/thread-2359462-1-1.html</p>

<p>http://gentoo.linuxsir.org/doc/cn/handbook/hb_part1_chap1.html</p>

<ul>
	<li>
	<p>置顶：激活 swap 区很重要，用 free -m 来查看是否已经激活。今天这个问题导致 emerge gentoo-sources 失败，耗费了一天</p>
	</li>
	<li>
	<p>帧缓冲（framebuffer）是Linux为显示设备提供的一个接口，把显存抽象后的一种设备，他允许上层应用程序在图形模式下直接对显示缓冲区进行读写操作。这种操作是抽象的，统一的。用户不必关心物理显存的位置、换页机制等等具体细节。这些都是由Framebuffer设备驱动来完成的。</p>

	<p>帧缓冲驱动的应用广泛，在linux的桌面系统中，Xwindow服务器就是利用帧缓冲进行窗口的绘制。尤其是通过帧缓冲可显示汉字点阵，成为Linux汉化的唯一可行方案。</p>

	<p>Linux FrameBuffer&nbsp;本质上只是提供了对图形设备的硬件抽象，在开发者看来，FrameBuffer&nbsp;是一块显示缓存，往显示缓存中写入特定格式的数据就意味着向屏幕输出内容。所以说<span class="marker">FrameBuffer就是一块白板</span>。例如对于初始化为16&nbsp;位色的FrameBuffer&nbsp;来说，&nbsp;FrameBuffer中的两个字节代表屏幕上一个点，从上到下，从左至右，屏幕位置与内存地址是顺序的线性关系。</p>

	<p>帧缓存可以在系统存储器(内存)的任意位置，视频控制器通过访问帧缓存来刷新屏幕。&nbsp;帧缓存也叫刷新缓存&nbsp;Frame buffer&nbsp;或&nbsp;refresh buffer,&nbsp;这里的帧(frame)是指整个屏幕范围。</p>

	<p>帧缓存有个地址，是在内存里。我们通过不停的向frame buffer中写入数据，&nbsp;显示控制器就自动的从frame buffer中取数据并显示出来。全部的图形都共享内存中同一个帧缓存。</p>

	<p>CPU指定显示控制器工作，则显示控制器根据CPU的控制到指定的地方去取数据和指令，目前的数据一般是从显存里取，如果显存里存不下，则从内存里取，内存也放不下，则从硬盘里取，当然也不是内存放不下，而是为了节省内存的话，可以放在硬盘里，然后通过指令控制显示控制器去取。帧缓存&nbsp;Frame Buffer，里面存储的东西是一帧一帧的，&nbsp;显卡会不停的刷新Frame Buffer,&nbsp;<span class="marker">这每一帧如果不捕获的话，&nbsp;则会被丢弃，也就是说是实时的</span>。这每一帧不管是保存在内存还是显存里，都是一个显性的信息，这每一帧假设是800x600的分辨率，&nbsp;则保存的是800x600个像素点，和颜色值。</p>

	<p><span class="marker">帧缓冲设备对应的设备文件为/dev/fb*</span>，如果系统有多个显示卡，Linux下还可支持多个帧缓冲设备，最多可达32&nbsp;个，分别为/dev/fb0到/dev/fb31，<span class="marker">而/dev/fb则为当前缺省的帧缓冲设备</span>，通常指向/dev/fb0。当然在嵌入式系统中支持一个显示设备就够了。帧缓冲设备为标准字符设备，主设备号为29，次设备号则从0到31。分别对应/dev/fb0-/dev/fb31。</p>
	</li>
	<li>
	<p>Gentoo的LiveCD是包含了可使用的Gentoo环境的启动CD。它们允许你们从CD启动Linux。在启动过程中，它们会自动检测你的硬件和加载准确的驱动。它们是由Gentoo开发者维护的。</p>
	</li>
	<li>
	<p>Portage</p>

	<p>Gentoo与其他Linux的发行版最大的不同就是软件包管理方式了，叫做Portage，是从BSD借鉴过来的，兼有Debian的apt和BSD的port的优点。Portage的安装软件的方式就像是一个供应商提供给你原理和安装手册，你把材料买回家去自己组装，有点象宜家的的家具。</p>

	<p>/usr/portage/ 下是提供了安装手册，分类放在那里，叫做ebuild，不过这个手册不是给你看的，是给你的系统看的，你的系统可以按照这个手册为你打造出软件来，其实你要做的只是下达一个命令而矣。&nbsp;</p>

	<p>/usr/portage/distfiles下放着源代码，相当于原料，这些原料其实可以不放在那里，随时从网上下载最新的。&nbsp;</p>

	<p>/usr/portage/packages 下放着在你的系统上编译出来的二进制软件，相当于成品，而 /usr/portage 的其他目录下面则是分门别类的放着产品的目录和安装手册。这是最重要的东西了。&nbsp;</p>

	<p>/etc/make.conf 下存放着你的个性化参数，这是你的个性化表现。如你不想吃香菜，你就可以在里面加上一句&rdquo;-香菜&ldquo;，这样保证以后编译出来的产品里面绝对不会添加香菜这味调料。&nbsp;</p>
	</li>
	<li>
	<p>Windows与Linux的使用房间的方式是不同的，Windows将硬盘划分为CDEF等区，相当于将其房子划分出CDEF等大房间，然后再让大家住进来，以后随便你让谁住到那个房间。如一般Windows要住在C:盘，其他软件放在那里你自己分配就可以了。</p>

	<p>而Linux不太一样，Linux一般将所有的东西分为bin boot dev etc home lib mnt opt proc root sbin sys tmp usr var等小组，以后再加东西就按照性质分配到这几个组之中，一般不会再增加组了。房间规划好了之后，再规定这个房间归那个组用，当然也可以将几个组住一个房间里面。&nbsp;</p>

	<p>/boot 组的人住在门房里，他管着开门，所以我们要将给他在门口建个房间，这个小组的人少，占地方不大，只要32M就够了。</p>

	<p>还要有一个临时的仓库，以后工作间暂时不用的东西可以放在那里，它叫做交换区swap。&nbsp;</p>

	<p>那个叫root的人是你，你有绝对的权威，你的房间叫做/root。&nbsp;</p>

	<p>/home 组的人，是这个家的住客，以后在这个家里住的人都在/home下面以自己的名子占了一块小柜子，可以在里面放自己私人的东西。&nbsp;</p>

	<p>/proc 的房间其实不是一个房间，只是工作间也就<span class="marker">内存的一个大屏幕</span>，你可以在这里看到你的工作间的工作状况。&nbsp;</p>

	<p>/usr是管的公共的地方，家里的一般东西放在那里。如我们的使用手册就放在/usr/portage下面。</p>

	<p>/dev管的是各种设备，水电煤气等都归他管，在你的计算机上就是所有的硬件都归他管。连我们现在要用的地皮也归他管，现在叫做/dev/hda。&nbsp;</p>

	<p>还有叫做tmp的，它管一些临时的东西，你可以将东西在拿进屋子里以前暂时放在它那儿。</p>

	<p>/bin管理着各种工具，你工作的时候需要什么东西可以找他要。&nbsp;</p>

	<p>/sbin是只有/root才能够用的工具，一般是一些必不可少，但又比较危险的工具。</p>

	<p>还有一个叫做/etc的，它管着各种规章制度，如不可以随地大小便，进屋要脱鞋等，你可以制定各种规则，让他替你执行这些规则。&nbsp;</p>

	<p>有个叫做lib的，里面放着其他工具经常要用到的东西，象是各种通用的零件一样，其他的工具都可以拿来用。&nbsp;</p>

	<p>/opt叫做可以选择的，一般是一些厂商的软件安装在这里，例如Java一般就安装在这里。</p>

	<p>/var管理一些可变的数据，具体内容不是很固定，一般是一些文件记录log的地方，或者是一些程序存放数据的地方，你可以去看一看。&nbsp;</p>

	<p>/mnt是车库，外来的东西一般就放在这里，平时这里是空着的。</p>
	</li>
	<li>
	<p>最简步骤</p>

	<ul>
		<li>
		<pre>
gentoo-nofb​</pre>
		</li>
		<li>
		<p>尝试不加 dopcmcia 参数</p>

		<p>这个选项加载了对PCMCIA和Cardbus硬件的支持，也使得pcmcia卡的 cardmgr能够在光盘启动的时候运行起来。这个选项只有在从 PCMCIA/Cardbus设备启动的时候才需要。</p>
		</li>
		<li>
		<p>使用远程终端连接还是比较方便的，至少不用反复在虚拟机中切换了。所以需要设置 root 的密码</p>

		<pre>
service sshd start
</pre>

		<pre>
passwd</pre>
		</li>
	</ul>
	</li>
	<li>
	<p>一开始我们先介绍块设备。最有名的块设备可能就是Linux系统中表示第一个IDE硬盘的/dev/sda。SCSI硬盘和Serial ATA硬盘都是/dev/sda。如果你正在使用内核里新的libata架构，即便IDE硬盘也会是/dev/sd*。如果你用的是旧的设备架构，你的第一个IDE硬盘将是/dev/hda</p>
	</li>
	<li>
	<p>分区</p>

	<p>尽管在理论上可以使用一整块磁盘来安装你的Linux系统，但是在实际中几乎从不这样做。相反，整个磁盘块设备被分割成更小、更容易管理的块设备。在AMD64系统中，这些被称作分区。</p>

	<p>分区有三种类型：主分区，扩展分区和逻辑分区。</p>

	<p>主分区是把自己的信息储存在MBR（主引导记录）中的分区。由于MBR非常小（512个字节），所以仅可以定义4个主分区（例如，/dev/sda1到/dev/sda4）。</p>

	<p>扩展分区是一种特殊的主分区（意味着扩展分区必须是4个可能的主分区之一），它包含着更多的分区。这种分区最初并不存在，但是由于4个主分区太少了，为了能划分更多的分区，在保持向后的兼容性的前提下扩展分区诞生了。</p>

	<p>逻辑分区是在扩展分区内部的分区。它们的定义不在MBR中，而是在扩展分区中。</p>
	</li>
	<li>
	<p>查看分区结构</p>

	<pre>
livecd ~ # fdisk -l /dev/sda</pre>
	</li>
	<li>
	<p>/mnt/gentoo 目录已存在，可直接挂载 sda3 到其上，作为将来的 / 目录</p>

	<pre>
livecd ~ # mount /dev/sda3 /mnt/gentoo
</pre>
	boot 目录则需要手动创建，并挂载 sda1 到其上。

	<pre>
livecd ~ # mkdir /mnt/gentoo/boot
livecd ~ # mount /dev/sda1 /mnt/gentoo/boot
</pre>

	<pre>
livecd ~ # cd /mnt/gentoo
</pre>

	<pre>
mount -t proc none /mnt/gentoo/proc
mount -o bind /dev /mnt/gentoo/dev</pre>
	</li>
	<li>
	<p>make.conf 的位置在 /mnt/gentoo/etc/portage/make.conf，并不在 .../etc/make.conf</p>

	<pre>
 # cat etc/portage/make.conf
# These settings were set by the catalyst build script that automatically
# built this stage.
# Please consult /usr/share/portage/config/make.conf.example for a more
# detailed example.
CFLAGS=&quot;-O2 -pipe&quot;
CXXFLAGS=&quot;${CFLAGS}&quot;
# WARNING: Changing your CHOST is not something that should be done lightly.
# Please consult http://www.gentoo.org/doc/en/change-chost.xml before changing.
CHOST=&quot;x86_64-pc-linux-gnu&quot;
# These are the USE flags that were used in addition to what is provided by the
# profile used for building.
USE=&quot;bindist mmx sse sse2&quot;
PORTDIR=&quot;/usr/portage&quot;
DISTDIR=&quot;${PORTDIR}/distfiles&quot;
PKGDIR=&quot;${PORTDIR}/packages</pre>
	</li>
	<li>
	<p>&nbsp;拷贝DNS信息，此步的目的是为了执行 emerge gentoo-sources 时能够正确解析外网的域名。同时，如果选择了速度快的镜像就更好了。</p>

	<pre>
（参数&quot;-L&quot;是必须的，用来确保我们拷贝的不是一个符号链接）
# cp -L /etc/resolv.conf /mnt/gentoo/etc/</pre>
	</li>
</ul>
