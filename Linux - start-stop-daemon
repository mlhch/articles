<h1>Linux - start-stop-daemon</h1>

<p>2014-02-14 21:53 Friday</p>

<p><a href="http://man7.org/linux/man-pages/man8/start-stop-daemon.8.html" target="_blank">http://man7.org/linux/man-pages/man8/start-stop-daemon.8.html</a></p>

<h2>NAME &nbsp; &nbsp; &nbsp; &nbsp;&nbsp;<a href="http://man7.org/linux/man-pages/man8/start-stop-daemon.8.html#top_of_page">top</a></h2>

<pre>
       start-stop-daemon - start and stop system daemon programs
</pre>

<h2>SYNOPSIS &nbsp; &nbsp; &nbsp; &nbsp;&nbsp;<a href="http://man7.org/linux/man-pages/man8/start-stop-daemon.8.html#top_of_page">top</a></h2>

<pre>
       start-stop-daemon [option...] command
</pre>

<h2>DESCRIPTION &nbsp; &nbsp; &nbsp; &nbsp;&nbsp;<a href="http://man7.org/linux/man-pages/man8/start-stop-daemon.8.html#top_of_page">top</a></h2>

<pre>
       start-stop-daemon is used to control the creation and termination of
       system-level processes.  Using one of the matching options,
       start-stop-daemon can be configured to find existing instances of a
       running process.

       Note: unless --pidfile is specified, start-stop-daemon behaves
       similar to <a href="http://man7.org/linux/man-pages/man1/killall.1.html">killall(1)</a>.  start-stop-daemon will scan the process table
       looking for any processes which match the process name, uid, and/or
       gid (if specified). Any matching process will prevent --start from
       starting the daemon. All matching processes will be sent the TERM
       signal (or the one specified via --signal or --retry) if --stop is
       specified. For daemons which have long-lived children which need to
       live through a --stop, you must specify a pidfile.
</pre>

<h2>COMMANDS &nbsp; &nbsp; &nbsp; &nbsp;&nbsp;<a href="http://man7.org/linux/man-pages/man8/start-stop-daemon.8.html#top_of_page">top</a></h2>

<pre>
       -S, --start [--] arguments
              Check for the existence of a specified process.  If such a
              process exists, start-stop-daemon does nothing, and exits with
              error status 1 (0 if --oknodo is specified).  If such a
              process does not exist, it starts an instance, using either
              the executable specified by --exec or, if specified, by
              --startas.  Any arguments given after -- on the command line
              are passed unmodified to the program being started.

       -K, --stop
              Checks for the existence of a specified process.  If such a
              process exists, start-stop-daemon sends it the signal
              specified by --signal, and exits with error status 0.  If such
              a process does not exist, start-stop-daemon exits with error
              status 1 (0 if --oknodo is specified). If --retry is
              specified, then start-stop-daemon will check that the
              process(es) have terminated.

       -T, --status
              Check for the existence of a specified process, and returns an
              exit status code, according to the LSB Init Script Actions.

       -H, --help
              Show usage information and exit.

       -V, --version
              Show the program version and exit.
</pre>

<h2>OPTIONS &nbsp; &nbsp; &nbsp; &nbsp;&nbsp;<a href="http://man7.org/linux/man-pages/man8/start-stop-daemon.8.html#top_of_page">top</a></h2>

<pre>
   Matching options
       --pid pid
              Check for a process with the specified pid. The pid must be a
              number greater than 0.

       -p, --pidfile pid-file
              Check whether a process has created the file pid-file. Note:
              using this matching option alone might cause unintended
              processes to be acted on, if the old process terminated
              without being able to remove the pid-file.

       -x, --exec executable
              Check for processes that are instances of this executable. The
              executable argument should be an absolute pathname. Note: this
              might not work as intended with interpreted scripts, as the
              executable will point to the interpreter. Take into account
              processes running from inside a chroot will also be matched,
              so other match restrictions might be needed.

       -n, --name process-name
              Check for processes with the name process-name. The process-
              name is usually the process filename, but it could have been
              changed by the process itself. Note: on most systems this
              information is retrieved from the process comm name from the
              kernel, which tends to have a relatively short length limit
              (assuming more than 15 characters is non-portable).

       -u, --user username|uid
              Check for processes owned by the user specified by username or
              uid. Note: using this matching option alone will cause all
              processes matching the user to be acted on.

   Generic options
       -g, --group group|gid
              Change to group or gid when starting the process.

       -s, --signal signal
              With --stop, specifies the signal to send to processes being
              stopped (default TERM).

       -R, --retry timeout|schedule
              With --stop, specifies that start-stop-daemon is to check
              whether the process(es) do finish. It will check repeatedly
              whether any matching processes are running, until none are. If
              the processes do not exit it will then take further action as
              determined by the schedule.

              If timeout is specified instead of schedule, then the schedule
              signal/timeout/KILL/timeout is used, where signal is the
              signal specified with --signal.

              schedule is a list of at least two items separated by slashes
              (/); each item may be -signal-number or [-]signal-name, which
              means to send that signal, or timeout, which means to wait
              that many seconds for processes to exit, or forever, which
              means to repeat the rest of the schedule forever if necessary.

              If the end of the schedule is reached and forever is not
              specified, then start-stop-daemon exits with error status 2.
              If a schedule is specified, then any signal specified with
              --signal is ignored.

       -a, --startas pathname
              With --start, start the process specified by pathname.  If not
              specified, defaults to the argument given to --exec.

       -t, --test
              Print actions that would be taken and set appropriate return
              value, but take no action.

       -o, --oknodo
              Return exit status 0 instead of 1 if no actions are (would be)
              taken.

       -q, --quiet
              Do not print informational messages; only display error
              messages.

       -c, --chuid username|uid[:group|gid]
              Change to this username/uid before starting the process. You
              can also specify a group by appending a :, then the group or
              gid in the same way as you would for the `chown&#39; command
              (user:group).  If a user is specified without a group, the
              primary GID for that user is used.  When using this option you
              must realize that the primary and supplemental groups are set
              as well, even if the --group option is not specified. The
              --group option is only for groups that the user isn&#39;t normally
              a member of (like adding per process group membership for
              generic users like nobody).

       -r, --chroot root
              Chdir and chroot to root before starting the process. Please
              note that the pidfile is also written after the chroot.

       -d, --chdir path
              Chdir to path before starting the process. This is done after
              the chroot if the -r|--chroot option is set. When not
              specified, start-stop-daemon will chdir to the root directory
              before starting the process.

       -b, --background
              Typically used with programs that don&#39;t detach on their own.
              This option will force start-stop-daemon to fork before
              starting the process, and force it into the background.
              WARNING: start-stop-daemon cannot check the exit status if the
              process fails to execute for any reason. This is a last
              resort, and is only meant for programs that either make no
              sense forking on their own, or where it&#39;s not feasible to add
              the code for them to do this themselves.

       -C, --no-close
              Do not close any file descriptor when forcing the daemon into
              the background.  Used for debugging purposes to see the
              process output, or to redirect file descriptors to log the
              process output.  Only relevant when using --background.

       -N, --nicelevel int
              This alters the priority of the process before starting it.

       -P, --procsched policy:priority
              This alters the process scheduler policy and priority of the
              process before starting it. The priority can be optionally
              specified by appending a : followed by the value. The default
              priority is 0. The currently supported policy values are
              other, fifo and rr.

       -I, --iosched class:priority
              This alters the IO scheduler class and priority of the process
              before starting it. The priority can be optionally specified
              by appending a : followed by the value. The default priority
              is 4, unless class is idle, then priority will always be 7.
              The currently supported values for class are idle, best-effort
              and real-time.

       -k, --umask mask
              This sets the umask of the process before starting it.

       -m, --make-pidfile
              Used when starting a program that does not create its own pid
              file. This option will make start-stop-daemon create the file
              referenced with --pidfile and place the pid into it just
              before executing the process. Note, the file will not be
              removed when stopping the program.  NOTE: This feature may not
              work in all cases. Most notably when the program being
              executed forks from its main process. Because of this, it is
              usually only useful when combined with the --background
              option.

       -v, --verbose
              Print verbose informational messages.
</pre>

<h2>EXIT STATUS &nbsp; &nbsp; &nbsp; &nbsp;&nbsp;<a href="http://man7.org/linux/man-pages/man8/start-stop-daemon.8.html#top_of_page">top</a></h2>

<pre>
       0      The requested action was performed. If --oknodo was specified,
              it&#39;s also possible that nothing had to be done.  This can
              happen when --start was specified and a matching process was
              already running, or when --stop was specified and there were
              no matching processes.

       1      If --oknodo was not specified and nothing was done.

       2      If --stop and --retry were specified, but the end of the
              schedule was reached and the processes were still running.

       3      Any other error.

       When using the --status command, the following status codes are
       returned:

       0      Program is running.

       1      Program is not running and the pid file exists.

       3      Program is not running.

       4      Unable to determine program status.
</pre>

<h2>EXAMPLE &nbsp; &nbsp; &nbsp; &nbsp;&nbsp;<a href="http://man7.org/linux/man-pages/man8/start-stop-daemon.8.html#top_of_page">top</a></h2>

<pre>
       Start the food daemon, unless one is already running (a process named
       food, running as user food, with pid in food.pid):

              start-stop-daemon --start --oknodo --user food --name food \
                   --pidfile /run/food.pid --startas /usr/sbin/food \
                   --chuid food -- --daemon

       Send SIGTERM to food and wait up to 5 seconds for it to stop:

              start-stop-daemon --stop --oknodo --user food --name food \
                   --pidfile /run/food.pid --retry 5

       Demonstration of a custom schedule for stopping food:

              start-stop-daemon --stop --oknodo --user food --name food \
                   --pidfile /run/food.pid --retry=TERM/30/KILL/5
</pre>

<h2>COLOPHON &nbsp; &nbsp; &nbsp; &nbsp;&nbsp;<a href="http://man7.org/linux/man-pages/man8/start-stop-daemon.8.html#top_of_page">top</a></h2>

<pre>
       This page is part of the dpkg (Debian Package Manager) project.
       Information about the project can be found at
       https://wiki.debian.org/Teams/Dpkg/.  If you have a bug report for
       this manual page, see
       http://bugs.debian.org/cgi-bin/pkgreport.cgi?src=dpkg.  This page was
       obtained from the project&#39;s upstream Git repository
       (git://git.debian.org/git/dpkg/dpkg.git) on 2014-02-08.  If you
       discover any rendering problems in this HTML version of the page, or
       you believe there is a better or more up-to-date source for the page,
       or you have corrections or improvements to the information in this
       COLOPHON (which is not part of the original manual page), send a mail
       to man-pages@man7.org

Debian Project                   2013-12-14             start-stop-daemon(8)</pre>
